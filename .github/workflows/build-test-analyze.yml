name: Build, Test and Analyze

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-analyze:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest
    
    env:
      CI: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Restore dependencies
      run: dotnet restore Aristotle_Study.sln

    - name: Begin SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin \
          /k:"mayconht_Aristotle_Study" \
          /o:"personalprojcts" \
          /d:sonar.token="$SONAR_TOKEN" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.projectBaseDir="$GITHUB_WORKSPACE" \
          /d:sonar.cs.opencover.reportsPaths="./coverage.opencover.xml" \
          /d:sonar.coverage.exclusions="**/Program.cs,**/Migrations/**/*,**/Tests/**/*" \
          /d:sonar.exclusions="**/Tests/**/*,**/bin/**,**/obj/**,**/Migrations/**,**/*.Designer.cs,**/Program.cs"

    - name: Build
      run: dotnet build Aristotle_Study.sln --configuration Release --no-restore

    - name: Test with coverage
      run: |
        dotnet test Tests/Aristotle.UnitTests.csproj \
          --configuration Release \
          --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults/ \
          --logger trx \
          --settings coverlet.runsettings

    - name: Move coverage file
      run: |
        find ./TestResults -name "coverage.opencover.xml" -exec cp {} ./coverage.opencover.xml \;
        ls -la ./coverage.opencover.xml

    - name: End SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="$SONAR_TOKEN"

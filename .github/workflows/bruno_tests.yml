name: Run Bruno Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-bruno-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    env:
      BRUNO_PATH: bruno/UserService API

    steps:
    - name: Checkout code with full commit SHA
      uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache Bruno CLI
      uses: actions/cache@v4
      id: cache-bruno
      with:
        path: /usr/local/lib/node_modules/@usebruno
        key: ${{ runner.os }}-bruno-cli-${{ hashFiles('package-lock.json') }}
        restore-keys: ${{ runner.os }}-bruno-cli-

    - name: Install Bruno CLI
      if: steps.cache-bruno.outputs.cache-hit != 'true'
      run: npm install -g @usebruno/cli

    - name: Set environment variables
      run: |
        echo "APP_PORT=3000" >> $GITHUB_ENV
        echo "USE_SQLITE=true" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t darkdollynho/usr_svc-aristotle:latest .

    - name: Start user_service
      run: |
        docker run -d -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} --name user_service darkdollynho/usr_svc-aristotle:latest

    - name: Wait for user_service to be ready
      env:
        APP_PORT: ${{ env.APP_PORT }}
      run: |
        echo "Waiting for user_service to be ready..."
        until $(curl --output /dev/null --silent --head --fail http://localhost:$APP_PORT/health); do
          echo "Still waiting..."
          sleep 5
        done

    - name: Run Bruno tests
      env:
        APP_PORT: ${{ env.APP_PORT }}
      run: |
        mkdir -p bruno_results
        cd "$GITHUB_WORKSPACE/$BRUNO_PATH"
        npx @usebruno/cli run . --env-file environments/development.bru --tags=Regression --reporter-html "$GITHUB_WORKSPACE/bruno_results/report.html" --reporter-junit "$GITHUB_WORKSPACE/bruno_results/report.xml"

    - name: Log in to Docker Hub
      if: success()
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      if: success()
      run: |
        docker push darkdollynho/usr_svc-aristotle:latest

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bruno-test-results
        path: bruno_results

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: bruno_results/report.xml
